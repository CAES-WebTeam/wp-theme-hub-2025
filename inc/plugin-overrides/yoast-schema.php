<?php
/**
 * Plugin Name: Custom Yoast Schema for Authors
 * Description: Replaces the default Yoast author schema with authors from an ACF repeater field.
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

/**
 * For debugging: pretty-prints the Yoast schema in the page source.
 * It's recommended to remove this on a live site.
 */
// add_filter( 'yoast_seo_development_mode', '__return_true' );


/**
 * Modifies the Yoast SEO schema to include multiple authors from the 'authors' ACF repeater field.
 * This function handles both WordPress Users and Custom manual entries.
 *
 * @param array $data The Schema Article data generated by Yoast.
 * @return array The modified Schema Article data.
 */
function caes_add_acf_authors_to_yoast_schema( $data ) {
    
    // Get the 'authors' repeater field for the current post.
    $authors = get_field('authors');

    // Proceed only if the repeater field has data.
    if ( $authors ) {
        $authors_schema = []; // Initialize an empty array for our author schema objects.

        // Loop through each row of the repeater.
        foreach ( $authors as $author_row ) {
            
            $entry_type = $author_row['type'] ?? '';
            $person_schema = null;

            // Check if it's a 'Custom' (manual) entry.
            if ( $entry_type === 'Custom' ) {
                $custom_user = $author_row['custom_user'] ?? $author_row['custom'] ?? [];
                $first_name = $custom_user['first_name'] ?? '';
                $last_name = $custom_user['last_name'] ?? '';
                $full_name = trim("$first_name $last_name");

                if ( ! empty($full_name) ) {
                    // Build a Person schema object WITHOUT a URL.
                    $person_schema = [
                        '@type' => 'Person',
                        'name'  => $full_name,
                    ];
                }
            } 
            // Otherwise, handle it as a WordPress User entry.
            else {
                $user_data = $author_row['user'] ?? null;
                $user_id = is_array($user_data) ? ($user_data['ID'] ?? null) : $user_data;
                
                if ( $user_id && is_numeric($user_id) ) {
                    $display_name = get_the_author_meta('display_name', $user_id);
                    $profile_url = get_author_posts_url($user_id);

                    // Build a Person schema object WITH a URL.
                    $person_schema = [
                        '@type' => 'Person',
                        'name'  => $display_name,
                        'url'   => $profile_url,
                    ];
                }
            }

            // If a valid person schema was created, add it to our array.
            if ($person_schema) {
                $authors_schema[] = $person_schema;
            }
        }

        // If we have authors, replace the default 'author' data with our new array.
        if ( ! empty($authors_schema) ) {
            $data['author'] = $authors_schema;
        }
    }

    return $data;
}

add_filter( 'wpseo_schema_article', 'caes_add_acf_authors_to_yoast_schema', 11, 1 );