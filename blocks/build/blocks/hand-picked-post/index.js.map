{"version":3,"file":"blocks/hand-picked-post/index.js","mappings":"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","sources":["webpack://theme-blocks/./src/blocks/hand-picked-post/edit.js","webpack://theme-blocks/./src/blocks/hand-picked-post/index.js","webpack://theme-blocks/./src/blocks/hand-picked-post/save.js","webpack://theme-blocks/./src/blocks/hand-picked-post/editor.scss?c51c","webpack://theme-blocks/./src/blocks/hand-picked-post/style.scss?21cc","webpack://theme-blocks/external window \"ReactJSXRuntime\"","webpack://theme-blocks/external window [\"wp\",\"apiFetch\"]","webpack://theme-blocks/external window [\"wp\",\"blockEditor\"]","webpack://theme-blocks/external window [\"wp\",\"blocks\"]","webpack://theme-blocks/external window [\"wp\",\"components\"]","webpack://theme-blocks/external window [\"wp\",\"element\"]","webpack://theme-blocks/external window [\"wp\",\"i18n\"]","webpack://theme-blocks/webpack/bootstrap","webpack://theme-blocks/webpack/runtime/chunk loaded","webpack://theme-blocks/webpack/runtime/compat get default export","webpack://theme-blocks/webpack/runtime/define property getters","webpack://theme-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://theme-blocks/webpack/runtime/make namespace object","webpack://theme-blocks/webpack/runtime/jsonp chunk loading","webpack://theme-blocks/webpack/before-startup","webpack://theme-blocks/webpack/startup","webpack://theme-blocks/webpack/after-startup"],"sourcesContent":["// Components\nimport { __ } from '@wordpress/i18n';\nimport {\n    useBlockProps,\n    InspectorControls,\n    InnerBlocks,\n    BlockControls\n} from '@wordpress/block-editor';\nimport {\n    PanelBody,\n    FormTokenField,\n    CheckboxControl,\n    __experimentalNumberControl as NumberControl,\n    Spinner,\n    RadioControl,\n    ToolbarGroup,\n    ToolbarButton,\n    RangeControl,\n    __experimentalToggleGroupControl as ToggleGroupControl,\n    __experimentalToggleGroupControlOption as ToggleGroupControlOption,\n    SelectControl\n} from '@wordpress/components';\nimport { useState, useEffect, useRef, useMemo } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\n\n// Import editor CSS\nimport './editor.scss';\n\n// Preset spacing classes and labels\nconst SPACING_CLASSES = [\n    '', // None (no gap)\n    '--wp--preset--spacing--20',\n    '--wp--preset--spacing--30',\n    '--wp--preset--spacing--40',\n    '--wp--preset--spacing--50',\n    '--wp--preset--spacing--60',\n    '--wp--preset--spacing--70',\n    '--wp--preset--spacing--80',\n];\n\nconst SPACING_LABELS = [\n    'None (no gap)',\n    '2X-Small',\n    'X-Small',\n    'Small',\n    'Medium',\n    'Large',\n    'X-Large',\n    '2X-Large',\n];\n\n// Custom debounce hook - no external dependencies needed\nfunction useDebounceCallback(callback, delay) {\n    const timeoutRef = useRef(null);\n\n    return useMemo(() => {\n        return (...args) => {\n            // Clear the previous timeout\n            if (timeoutRef.current) {\n                clearTimeout(timeoutRef.current);\n            }\n\n            // Set a new timeout\n            timeoutRef.current = setTimeout(() => {\n                callback(...args);\n            }, delay);\n        };\n    }, [callback, delay]);\n}\n\nexport default function Edit({ attributes, setAttributes }) {\n    const {\n        postIds = [],\n        postType = ['post'],\n        feedType = 'related-topics',\n        numberOfItems = 5,\n        customGapStep = 0,\n        displayLayout = 'list',\n        columns = 3,\n        gridItemPosition = 'manual',\n        gridAutoColumnWidth = 12,\n        gridAutoColumnUnit = 'rem'\n    } = attributes;\n\n    // Normalize postType to array\n    const selectedPostTypes = Array.isArray(postType) ? postType : [postType];\n\n    const handlePostTypeToggle = (type) => {\n        const updated = selectedPostTypes.includes(type)\n            ? selectedPostTypes.filter((t) => t !== type)\n            : [...selectedPostTypes, type];\n        setAttributes({ postType: updated, postIds: [] });\n    };\n\n    const postTypeOptions = [\n        { value: 'post', label: 'Posts', restBase: 'posts' },\n        { value: 'page', label: 'Pages', restBase: 'pages' },\n        { value: 'shorthand_story', label: 'Shorthand Stories', restBase: 'shorthand_story' },\n        { value: 'publications', label: 'Publications', restBase: 'publications' },\n    ];\n\n    const [availablePosts, setAvailablePosts] = useState([]);\n    const [selectedPosts, setSelectedPosts] = useState([]); // Store selected posts separately\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [isSearching, setIsSearching] = useState(false);\n\n    // Initial load of recent posts (your existing functionality)\n    useEffect(() => {\n        if (!selectedPostTypes.length) return;\n\n        setIsLoading(true);\n\n        Promise.all(\n            selectedPostTypes.map((type) => {\n                const restBase = postTypeOptions.find((opt) => opt.value === type)?.restBase || type;\n                return apiFetch({ path: `/wp/v2/${restBase}?per_page=20&_fields=id,title,slug` })\n                    .then((posts) =>\n                        posts.map((post) => ({\n                            id: post.id,\n                            label: post.title.rendered || `(${type} #${post.id})`,\n                            postType: type,\n                        }))\n                    )\n                    .catch(() => []); // Return empty array on error\n            })\n        )\n            .then((results) => {\n                setAvailablePosts(results.flat());\n                setIsLoading(false);\n            })\n            .catch(() => {\n                setAvailablePosts([]);\n                setIsLoading(false);\n            });\n    }, [selectedPostTypes.sort().join(',')]); // Watch for exact changes\n\n    // Load selected posts data when postIds change\n    useEffect(() => {\n        if (!postIds.length) {\n            setSelectedPosts([]);\n            return;\n        }\n\n        // Find selected posts that we don't already have data for\n        const missingIds = postIds.filter(id =>\n            !selectedPosts.find(post => post.id === id) &&\n            !availablePosts.find(post => post.id === id)\n        );\n\n        if (missingIds.length === 0) {\n            // We already have all the data we need\n            const currentSelectedPosts = postIds.map(id => {\n                return selectedPosts.find(post => post.id === id) ||\n                    availablePosts.find(post => post.id === id);\n            }).filter(Boolean);\n\n            setSelectedPosts(currentSelectedPosts);\n            return;\n        }\n\n        // Load data for missing posts\n        const loadMissingPosts = async () => {\n            const results = await Promise.all(\n                selectedPostTypes.map(async (type) => {\n                    const restBase = postTypeOptions.find((opt) => opt.value === type)?.restBase || type;\n                    const typeSpecificIds = missingIds; // You could filter by type if you stored postType with each ID\n\n                    if (typeSpecificIds.length === 0) return [];\n\n                    try {\n                        const posts = await apiFetch({\n                            path: `/wp/v2/${restBase}?include=${typeSpecificIds.join(',')}&_fields=id,title,slug`\n                        });\n                        return posts.map((post) => ({\n                            id: post.id,\n                            label: post.title.rendered || `(${type} #${post.id})`,\n                            postType: type,\n                        }));\n                    } catch (error) {\n                        return [];\n                    }\n                })\n            );\n\n            const newSelectedPosts = results.flat();\n\n            // Combine with existing selectedPosts and update\n            const allSelectedPosts = postIds.map(id => {\n                return selectedPosts.find(post => post.id === id) ||\n                    availablePosts.find(post => post.id === id) ||\n                    newSelectedPosts.find(post => post.id === id);\n            }).filter(Boolean);\n\n            setSelectedPosts(allSelectedPosts);\n        };\n\n        loadMissingPosts();\n    }, [postIds, selectedPostTypes]);\n\n    // Search functionality - simplified, no fallback reloading\n    const searchPosts = async (term) => {\n        if (!term || term.length < 3) {\n            // Don't do anything - just let them keep typing\n            return;\n        }\n\n        setIsSearching(true);\n\n        try {\n            const results = await Promise.all(\n                selectedPostTypes.map((type) => {\n                    const restBase = postTypeOptions.find((opt) => opt.value === type)?.restBase || type;\n                    return apiFetch({\n                        path: `/wp/v2/${restBase}?search=${encodeURIComponent(term)}&per_page=50&orderby=relevance&_fields=id,title,slug`\n                    })\n                        .then((posts) =>\n                            posts.map((post) => ({\n                                id: post.id,\n                                label: post.title.rendered || `(${type} #${post.id})`,\n                                postType: type,\n                            }))\n                        )\n                        .catch(() => []); // Return empty array on error\n                })\n            );\n\n            setAvailablePosts(results.flat());\n        } catch (error) {\n            console.error('Search error:', error);\n            setAvailablePosts([]);\n        } finally {\n            setIsSearching(false);\n        }\n    };\n\n    // Create debounced search function\n    const debouncedSearch = useDebounceCallback(searchPosts, 300);\n\n    // Clean up on unmount\n    useEffect(() => {\n        return () => {\n            if (debouncedSearch.cancel) {\n                debouncedSearch.cancel();\n            }\n        };\n    }, [debouncedSearch]);\n\n    // Handle search input changes\n    const handleSearchInputChange = (value) => {\n        setSearchTerm(value);\n        debouncedSearch(value);\n    };\n\n    // Combine selected posts with available posts for suggestions, avoiding duplicates\n    const allPosts = useMemo(() => {\n        const combined = [...selectedPosts];\n\n        availablePosts.forEach(post => {\n            if (!combined.find(p => p.id === post.id)) {\n                combined.push(post);\n            }\n        });\n\n        return combined;\n    }, [selectedPosts, availablePosts]);\n\n    // Get labels for selected post IDs\n    const selectedPostLabels = postIds.map(id => {\n        const post = allPosts.find(p => p.id === id);\n        return post ? post.label : `Post #${id}`;\n    });\n\n    const postSuggestions = allPosts.map((p) => p.label);\n\n    const DEFAULT_TEMPLATE = [\n        ['core/post-title', {}],\n        ['core/post-excerpt', {}],\n    ];\n\n    // Generate class names based on attributes\n    const baseClass = displayLayout === 'grid'\n        ? `hand-picked-post-grid columns-${columns}`\n        : 'hand-picked-post-list';\n\n    const spacingClass = customGapStep > 0\n        ? `gap-${SPACING_CLASSES[customGapStep].replace(/^--/, '').replace(/--/g, '-')}`\n        : '';\n\n    const combinedClassName = `${baseClass} ${spacingClass}`.trim();\n\n    const blockProps = useBlockProps();\n\n    return (\n        <>\n            <InspectorControls>\n                <PanelBody title={__('Featured Content Settings', 'hand-picked-post')}>\n                    <RadioControl\n                        label={__('Feed Type', 'hand-picked-post')}\n                        selected={feedType}\n                        options={[\n                            { label: __('Related Topics', 'hand-picked-post'), value: 'related-topics' },\n                            { label: __('Hand Pick Posts', 'hand-picked-post'), value: 'hand-picked' },\n                        ]}\n                        onChange={(value) => setAttributes({ feedType: value, postIds: [] })}\n                    />\n\n                    <PanelBody title={__('Select Post Types', 'hand-picked-post')} initialOpen={true}>\n                        {postTypeOptions.map(({ value, label }) => (\n                            <CheckboxControl\n                                key={value}\n                                label={label}\n                                checked={selectedPostTypes.includes(value)}\n                                onChange={() => handlePostTypeToggle(value)}\n                            />\n                        ))}\n                    </PanelBody>\n\n                    {feedType === 'hand-picked' && selectedPostTypes.length > 0 && (\n                        <>\n                            {(isLoading || isSearching) && <Spinner />}\n                            {!isLoading && (\n                                <FormTokenField\n                                    label={__('Select Posts', 'hand-picked-post')}\n                                    value={selectedPostLabels}\n                                    suggestions={postSuggestions}\n                                    onInputChange={handleSearchInputChange}\n                                    onChange={(selectedLabels) => {\n                                        const selectedIds = selectedLabels\n                                            .map((label) => {\n                                                const match = allPosts.find((p) => p.label === label);\n                                                return match ? match.id : null;\n                                            })\n                                            .filter((id) => id !== null);\n                                        setAttributes({ postIds: selectedIds });\n                                    }}\n                                    placeholder={__('Type at least 3 characters to search all posts...', 'hand-picked-post')}\n                                    disabled={isLoading}\n                                />\n                            )}\n                        </>\n                    )}\n\n                    {feedType === 'related-topics' && (\n                        <NumberControl\n                            label={__('Number of Items', 'hand-picked-post')}\n                            value={numberOfItems}\n                            min={1}\n                            onChange={(value) => setAttributes({ numberOfItems: parseInt(value, 10) })}\n                        />\n                    )}\n\n                    {displayLayout === 'grid' && (\n                        <>\n                            <ToggleGroupControl\n                                label={__('Grid Item Position', 'hand-picked-post')}\n                                value={gridItemPosition}\n                                onChange={(value) => setAttributes({ gridItemPosition: value })}\n                                isBlock\n                            >\n                                <ToggleGroupControlOption value=\"auto\" label=\"Automatic\" />\n                                <ToggleGroupControlOption value=\"manual\" label=\"Manual\" />\n                            </ToggleGroupControl>\n                        </>\n                    )}\n\n                    {displayLayout === 'grid' && gridItemPosition === 'auto' && (\n                        <>\n                            <NumberControl\n                                label={__('Auto Column Width', 'hand-picked-post')}\n                                value={gridAutoColumnWidth}\n                                onChange={(value) => setAttributes({ gridAutoColumnWidth: parseFloat(value) })}\n                                min={1}\n                                step={1}\n                            />\n                            <SelectControl\n                                label={__('Auto Column Unit', 'hand-picked-post')}\n                                value={gridAutoColumnUnit}\n                                onChange={(value) => setAttributes({ gridAutoColumnUnit: value })}\n                                options={[\n                                    { value: 'rem', label: 'rem' },\n                                    { value: 'px', label: 'px' },\n                                    { value: '%', label: '%' },\n                                ]}\n                            />\n                        </>\n                    )}\n\n                    {displayLayout === 'grid' && gridItemPosition === 'manual' && (\n                        <>\n                            <RangeControl\n                                label={__('Number of Columns', 'hand-picked-post')}\n                                value={columns}\n                                onChange={(value) => setAttributes({ columns: value })}\n                                min={1}\n                                max={16}\n                            />\n                            <RangeControl\n                                label={__('Gap between items', 'hand-picked-post')}\n                                value={customGapStep}\n                                onChange={(value) => setAttributes({ customGapStep: value })}\n                                min={0}\n                                max={SPACING_CLASSES.length - 1}\n                                step={1}\n                                help={SPACING_LABELS[customGapStep] ? SPACING_LABELS[customGapStep] : 'No gap'}\n                            />\n                        </>\n                    )}\n                </PanelBody>\n            </InspectorControls>\n\n            <BlockControls>\n                <ToolbarGroup>\n                    <ToolbarButton\n                        icon=\"list-view\"\n                        label={__('List View', 'hand-picked-post')}\n                        isPressed={displayLayout === 'list'}\n                        onClick={() => setAttributes({ displayLayout: 'list' })}\n                    />\n                    <ToolbarButton\n                        icon=\"grid-view\"\n                        label={__('Grid View', 'hand-picked-post')}\n                        isPressed={displayLayout === 'grid'}\n                        onClick={() => setAttributes({ displayLayout: 'grid' })}\n                    />\n                </ToolbarGroup>\n            </BlockControls>\n\n            <div {...blockProps}>\n                <div className={combinedClassName}>\n                    {feedType === 'hand-picked' && (!postIds || postIds.length === 0) && (\n                        <p className=\"hand-picked-post-empty\">\n                            {__('Please select one or more posts from the sidebar.', 'hand-picked-post')}\n                        </p>\n                    )}\n\n                    {((feedType === 'hand-picked' && postIds && postIds.length > 0) || feedType === 'related-topics') && (\n                        <InnerBlocks\n                            template={DEFAULT_TEMPLATE}\n                            templateLock={false}\n                            renderAppender={InnerBlocks.ButtonBlockAppender}\n                        />\n                    )}\n                </div>\n            </div>\n        </>\n    );\n}","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport Save from './save';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\tsave: Save\n} );\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks, useBlockProps } from '@wordpress/block-editor';\n\nexport default function Save() {\n    return (\n        <InnerBlocks.Content />\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/hand-picked-post/index\": 0,\n\t\"blocks/hand-picked-post/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunktheme_blocks\"] = globalThis[\"webpackChunktheme_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/hand-picked-post/style-index\"], () => (__webpack_require__(\"./src/blocks/hand-picked-post/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","InspectorControls","InnerBlocks","BlockControls","PanelBody","FormTokenField","CheckboxControl","__experimentalNumberControl","NumberControl","Spinner","RadioControl","ToolbarGroup","ToolbarButton","RangeControl","__experimentalToggleGroupControl","ToggleGroupControl","__experimentalToggleGroupControlOption","ToggleGroupControlOption","SelectControl","useState","useEffect","useRef","useMemo","apiFetch","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SPACING_CLASSES","SPACING_LABELS","useDebounceCallback","callback","delay","timeoutRef","args","current","clearTimeout","setTimeout","Edit","attributes","setAttributes","postIds","postType","feedType","numberOfItems","customGapStep","displayLayout","columns","gridItemPosition","gridAutoColumnWidth","gridAutoColumnUnit","selectedPostTypes","Array","isArray","handlePostTypeToggle","type","updated","includes","filter","t","postTypeOptions","value","label","restBase","availablePosts","setAvailablePosts","selectedPosts","setSelectedPosts","isLoading","setIsLoading","searchTerm","setSearchTerm","isSearching","setIsSearching","length","Promise","all","map","find","opt","path","then","posts","post","id","title","rendered","catch","results","flat","sort","join","missingIds","currentSelectedPosts","Boolean","loadMissingPosts","typeSpecificIds","error","newSelectedPosts","allSelectedPosts","searchPosts","term","encodeURIComponent","console","debouncedSearch","cancel","handleSearchInputChange","allPosts","combined","forEach","p","push","selectedPostLabels","postSuggestions","DEFAULT_TEMPLATE","baseClass","spacingClass","replace","combinedClassName","trim","blockProps","children","selected","options","onChange","initialOpen","checked","suggestions","onInputChange","selectedLabels","selectedIds","match","placeholder","disabled","min","parseInt","isBlock","parseFloat","step","max","help","icon","isPressed","onClick","className","template","templateLock","renderAppender","ButtonBlockAppender","registerBlockType","Save","metadata","name","edit","save","Content"],"sourceRoot":""}