{"version":3,"file":"blocks/hand-picked-post/index.js","mappings":"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,GACKD,iBAAiB,eAClB9B,sDAAA;MAAA,GAASR,sEAAa,CAAC,CAAC;MAAAuC,QAAA,eACpB/B,sDAAA,CAACN,gEAAW,IAAE;IAAC,CACd,CAAC;EAAA,CACR,CAAC;AAEX;;;;;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AAC0B;AACA;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACA+C,oEAAiB,CAAEE,6CAAa,EAAE;EACjC;AACD;AACA;EACCE,IAAI,EAAExC,6CAAI;EACVyC,IAAI,EAAEJ,6CAAIA;AACX,CAAE,CAAC;;;;;;;;;;;;;;;;;;AClCH;AACA;AACA;AACqE;AAAA;AAEtD,SAASA,IAAIA,CAAA,EAAG;EAC3B,oBACI1C,sDAAA,CAACN,gEAAW,CAACqD,OAAO,IAAE,CAAC;AAE/B;;;;;;;;;;;ACTA;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://theme-blocks/./src/blocks/hand-picked-post/edit.js","webpack://theme-blocks/./src/blocks/hand-picked-post/index.js","webpack://theme-blocks/./src/blocks/hand-picked-post/save.js","webpack://theme-blocks/./src/blocks/hand-picked-post/editor.scss?c51c","webpack://theme-blocks/./src/blocks/hand-picked-post/style.scss","webpack://theme-blocks/external window \"ReactJSXRuntime\"","webpack://theme-blocks/external window [\"wp\",\"blockEditor\"]","webpack://theme-blocks/external window [\"wp\",\"blocks\"]","webpack://theme-blocks/external window [\"wp\",\"components\"]","webpack://theme-blocks/external window [\"wp\",\"element\"]","webpack://theme-blocks/external window [\"wp\",\"i18n\"]","webpack://theme-blocks/webpack/bootstrap","webpack://theme-blocks/webpack/runtime/chunk loaded","webpack://theme-blocks/webpack/runtime/compat get default export","webpack://theme-blocks/webpack/runtime/define property getters","webpack://theme-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://theme-blocks/webpack/runtime/make namespace object","webpack://theme-blocks/webpack/runtime/jsonp chunk loading","webpack://theme-blocks/webpack/before-startup","webpack://theme-blocks/webpack/startup","webpack://theme-blocks/webpack/after-startup"],"sourcesContent":["// Components\nimport { __ } from '@wordpress/i18n';\nimport {\n    useBlockProps,\n    InspectorControls,\n    InnerBlocks,\n} from '@wordpress/block-editor';\nimport {\n    PanelBody,\n    ComboboxControl,\n    SelectControl,\n} from '@wordpress/components';\nimport {\n    useState,\n} from '@wordpress/element';\n\n// Import editor CSS\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @param {Object} props All props passed to this function.\n * @return {WPElement}   Element to render.\n */\nexport default function Edit(props) {\n    const {\n        attributes,\n    } = props;\n\n    const {\n        postId,\n        postType,\n    } = attributes;\n\n    // Function to get posts based on selected post type\n    function getPosts() {\n        let options = [];\n        const posts = wp.data.select('core').getEntityRecords('postType', postType, { per_page: -1 });\n        if (null === posts) {\n            return options;\n        }\n        posts.forEach((post) => {\n            options.push({ value: post.id, label: post.title.rendered });\n        });\n        return options;\n    }\n\n    // Handle post type change\n    const handlePostTypeChange = (value) => {\n        props.setAttributes({ postType: value });\n        // Reset the postId when post type changes\n        props.setAttributes({ postId: 0 });\n    };\n\n    const [filteredOptions, setFilteredOptions] = useState(getPosts());\n\n    const inspectorControls = (\n        <>\n            <InspectorControls>\n                <PanelBody title={__('Featured Content Settings', 'hand-picked-post')}>\n                    {/* Post Type Selection Control */}\n                    <SelectControl\n                        label={__('Select Post Type', 'hand-picked-post')}\n                        value={postType}\n                        options={[\n                            { label: __('Posts', 'hand-picked-post'), value: 'post' },\n                            { label: __('Pages', 'hand-picked-post'), value: 'page' },\n                            { label: __('Shorthand Stories', 'hand-picked-post'), value: 'shorthand_story' },\n                            { label: __('Publications', 'hand-picked-post'), value: 'publication' },\n                        ]}\n                        onChange={handlePostTypeChange}\n                    />\n                    {/* Post Selection Control */}\n                    <ComboboxControl\n                        label={__('Select Post', 'hand-picked-post')}\n                        value={postId}\n                        onChange={(id) => props.setAttributes({ postId: parseInt(id) })}\n                        options={getPosts()}\n                        onFilterValueChange={(inputValue) =>\n                            setFilteredOptions(\n                                getPosts().filter((option) =>\n                                    option.label\n                                        .toLowerCase()\n                                        .startsWith(inputValue.toLowerCase())\n                                )\n                            )\n                        }\n                    />\n                </PanelBody>\n            </InspectorControls>\n        </>\n    );\n\n    if (0 === postId) {\n        return (\n            <>\n                {inspectorControls}\n                <div {...useBlockProps()}>\n                    <p className=\"hand-picked-post-empty\">{__(\n                        'Please click this block and select a post from the right side.',\n                        'hand-picked-post'\n                    )\n                    }</p>\n                </div>\n            </>\n        );\n    }\n\n    return (\n        <>\n            {inspectorControls}\n            <div {...useBlockProps()}>\n                <InnerBlocks />\n            </div>\n        </>\n    );\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport Save from './save';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\tsave: Save\n} );\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks, useBlockProps } from '@wordpress/block-editor';\n\nexport default function Save() {\n    return (\n        <InnerBlocks.Content />\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/hand-picked-post/index\": 0,\n\t\"blocks/hand-picked-post/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunktheme_blocks\"] = globalThis[\"webpackChunktheme_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/hand-picked-post/style-index\"], () => (__webpack_require__(\"./src/blocks/hand-picked-post/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","InspectorControls","InnerBlocks","PanelBody","ComboboxControl","SelectControl","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Edit","props","attributes","postId","postType","getPosts","options","posts","wp","data","select","getEntityRecords","per_page","forEach","post","push","value","id","label","title","rendered","handlePostTypeChange","setAttributes","filteredOptions","setFilteredOptions","inspectorControls","children","onChange","parseInt","onFilterValueChange","inputValue","filter","option","toLowerCase","startsWith","className","registerBlockType","Save","metadata","name","edit","save","Content"],"sourceRoot":""}