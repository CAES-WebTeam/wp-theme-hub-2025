{"version":3,"file":"blocks/expert-mark/view.js","mappings":";;;;AAAA;AACA;;AAEAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzD;EACA,IAAIC,MAAM,CAACC,UAAU,CAAC,oBAAoB,CAAC,CAACC,OAAO,EAAE;EAErD,MAAMC,QAAQ,GAAGL,QAAQ,CAACM,gBAAgB,CAAC,kBAAkB,CAAC;EAE9DD,QAAQ,CAACE,OAAO,CAACC,OAAO,IAAI;IAC3B,MAAMC,SAAS,GAAGD,OAAO,CAACE,YAAY,CAAC,kBAAkB,CAAC;IAC1D,MAAMC,OAAO,GAAGX,QAAQ,CAACY,cAAc,CAACH,SAAS,CAAC;IAElD,IAAI,CAACE,OAAO,EAAE;;IAEd;IACA,MAAME,WAAW,GAAGA,CAAA,KAAM;MACzBF,OAAO,CAACG,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;IACjC,CAAC;;IAED;IACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACzBC,UAAU,CAAC,MAAM;QAChB,IAAI,CAACN,OAAO,CAACP,OAAO,CAAC,QAAQ,CAAC,EAAE;UAC/BO,OAAO,CAACG,SAAS,CAACI,MAAM,CAAC,SAAS,CAAC;QACpC;MACD,CAAC,EAAE,GAAG,CAAC;IACR,CAAC;;IAED;IACA,MAAMC,aAAa,GAAIC,CAAC,IAAK;MAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,QAAQ,IAAID,CAAC,CAACC,GAAG,KAAK,KAAK,EAAE;QAC1CV,OAAO,CAACG,SAAS,CAACI,MAAM,CAAC,SAAS,CAAC;MACpC;IACD,CAAC;;IAED;IACAV,OAAO,CAACP,gBAAgB,CAAC,OAAO,EAAEY,WAAW,CAAC;IAC9CL,OAAO,CAACP,gBAAgB,CAAC,YAAY,EAAEY,WAAW,CAAC;IACnDL,OAAO,CAACP,gBAAgB,CAAC,MAAM,EAAEe,WAAW,CAAC;IAC7CR,OAAO,CAACP,gBAAgB,CAAC,YAAY,EAAEe,WAAW,CAAC;IACnDR,OAAO,CAACP,gBAAgB,CAAC,SAAS,EAAEkB,aAAa,CAAC;IAElDR,OAAO,CAACV,gBAAgB,CAAC,YAAY,EAAE,MAAM;MAC5CU,OAAO,CAACG,SAAS,CAACI,MAAM,CAAC,SAAS,CAAC;IACpC,CAAC,CAAC;EACH,CAAC,CAAC;AACH,CAAC,CAAC,C","sources":["webpack://theme-blocks/./src/blocks/expert-mark/view.js"],"sourcesContent":["// Code made in reference from:\n// https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Reference/Roles/tooltip_role\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\t// Skip tooltip logic if screen width is 782px or less\n\tif (window.matchMedia('(max-width: 782px)').matches) return;\n\n\tconst triggers = document.querySelectorAll('.tooltip-trigger');\n\n\ttriggers.forEach(trigger => {\n\t\tconst tooltipId = trigger.getAttribute('aria-describedby');\n\t\tconst tooltip = document.getElementById(tooltipId);\n\n\t\tif (!tooltip) return;\n\n\t\t// Show tooltip\n\t\tconst showTooltip = () => {\n\t\t\ttooltip.classList.add('visible');\n\t\t};\n\n\t\t// Hide tooltip, with hover check\n\t\tconst hideTooltip = () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!tooltip.matches(':hover')) {\n\t\t\t\t\ttooltip.classList.remove('visible');\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t};\n\n\t\t// Hide on Escape key\n\t\tconst handleKeydown = (e) => {\n\t\t\tif (e.key === 'Escape' || e.key === 'Esc') {\n\t\t\t\ttooltip.classList.remove('visible');\n\t\t\t}\n\t\t};\n\n\t\t// Event listeners\n\t\ttrigger.addEventListener('focus', showTooltip);\n\t\ttrigger.addEventListener('mouseenter', showTooltip);\n\t\ttrigger.addEventListener('blur', hideTooltip);\n\t\ttrigger.addEventListener('mouseleave', hideTooltip);\n\t\ttrigger.addEventListener('keydown', handleKeydown);\n\n\t\ttooltip.addEventListener('mouseleave', () => {\n\t\t\ttooltip.classList.remove('visible');\n\t\t});\n\t});\n});\n"],"names":["document","addEventListener","window","matchMedia","matches","triggers","querySelectorAll","forEach","trigger","tooltipId","getAttribute","tooltip","getElementById","showTooltip","classList","add","hideTooltip","setTimeout","remove","handleKeydown","e","key"],"sourceRoot":""}