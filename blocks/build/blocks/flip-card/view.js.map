{"version":3,"file":"blocks/flip-card/view.js","mappings":";;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;EACrD,MAAMC,SAAS,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,oCAAoC,CAAC;EAEjFD,SAAS,CAACE,OAAO,CAAC,UAASC,IAAI,EAAE;IAC7B,MAAMC,MAAM,GAAGD,IAAI,CAACE,YAAY,CAAC,cAAc,CAAC;IAChD,MAAMC,SAAS,GAAGR,QAAQ,CAACS,cAAc,CAACH,MAAM,GAAG,QAAQ,CAAC;IAC5D,MAAMI,QAAQ,GAAGV,QAAQ,CAACS,cAAc,CAACH,MAAM,GAAG,OAAO,CAAC;IAE1D,SAASK,YAAYA,CAACC,SAAS,EAAE;MAC7BP,IAAI,CAACQ,YAAY,CAAC,cAAc,EAAEC,MAAM,CAACF,SAAS,CAAC,CAAC;;MAEpD;MACA,IAAIJ,SAAS,EAAE;QACXA,SAAS,CAACK,YAAY,CAAC,aAAa,EAAEC,MAAM,CAACF,SAAS,CAAC,CAAC;MAC5D;MACA,IAAIF,QAAQ,EAAE;QACVA,QAAQ,CAACG,YAAY,CAAC,aAAa,EAAEC,MAAM,CAAC,CAACF,SAAS,CAAC,CAAC;MAC5D;;MAEA;MACAG,cAAc,CAACH,SAAS,CAAC;IAC7B;IAEA,SAASI,UAAUA,CAAA,EAAG;MAClB,MAAMC,SAAS,GAAGZ,IAAI,CAACE,YAAY,CAAC,cAAc,CAAC,KAAK,MAAM;MAC9DI,YAAY,CAAC,CAACM,SAAS,CAAC;IAC5B;IAEA,SAASF,cAAcA,CAACG,QAAQ,EAAE;MAC9B;MACA,MAAMC,eAAe,GAAGX,SAAS,GAAGA,SAAS,CAACL,gBAAgB,CAAC,qEAAqE,CAAC,GAAG,EAAE;MAC1I,MAAMiB,cAAc,GAAGV,QAAQ,GAAGA,QAAQ,CAACP,gBAAgB,CAAC,qEAAqE,CAAC,GAAG,EAAE;;MAEvI;MACAgB,eAAe,CAACf,OAAO,CAACiB,EAAE,IAAI;QAC1BA,EAAE,CAACR,YAAY,CAAC,UAAU,EAAEK,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC;MACtD,CAAC,CAAC;MAEFE,cAAc,CAAChB,OAAO,CAACiB,EAAE,IAAI;QACzBA,EAAE,CAACR,YAAY,CAAC,UAAU,EAAEK,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC;MACtD,CAAC,CAAC;IACN;;IAEA;IACAH,cAAc,CAAC,KAAK,CAAC;;IAErB;IACAV,IAAI,CAACJ,gBAAgB,CAAC,YAAY,EAAE,YAAW;MAC3CU,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC;IAEFN,IAAI,CAACJ,gBAAgB,CAAC,YAAY,EAAE,YAAW;MAC3CU,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;;IAEF;IACAN,IAAI,CAACJ,gBAAgB,CAAC,OAAO,EAAE,YAAW;MACtCe,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC;;IAEF;IACAX,IAAI,CAACJ,gBAAgB,CAAC,SAAS,EAAE,UAASqB,KAAK,EAAE;MAC7C,IAAI,CAACA,KAAK,CAACC,IAAI,KAAK,OAAO,IAAID,KAAK,CAACC,IAAI,KAAK,OAAO,KAAK,CAACD,KAAK,CAACE,MAAM,EAAE;QACrEF,KAAK,CAACG,cAAc,CAAC,CAAC;QACtBT,UAAU,CAAC,CAAC;MAChB;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC,C","sources":["webpack://theme-blocks/./src/blocks/flip-card/view.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n    const flipCards = document.querySelectorAll('.flip-card-container[data-card-id]');\n    \n    flipCards.forEach(function(card) {\n        const cardId = card.getAttribute('data-card-id');\n        const frontSide = document.getElementById(cardId + '-front');\n        const backSide = document.getElementById(cardId + '-back');\n        \n        function setFlipState(isFlipped) {\n            card.setAttribute('aria-pressed', String(isFlipped));\n            \n            // Update aria-hidden states\n            if (frontSide) {\n                frontSide.setAttribute('aria-hidden', String(isFlipped));\n            }\n            if (backSide) {\n                backSide.setAttribute('aria-hidden', String(!isFlipped));\n            }\n            \n            // Manage tabindex for focusable elements\n            updateTabIndex(isFlipped);\n        }\n        \n        function toggleFlip() {\n            const isPressed = card.getAttribute('aria-pressed') === 'true';\n            setFlipState(!isPressed);\n        }\n        \n        function updateTabIndex(showBack) {\n            // Get all focusable elements in both sides\n            const frontFocusables = frontSide ? frontSide.querySelectorAll('a, button, input, textarea, select, [tabindex]:not([tabindex=\"-1\"])') : [];\n            const backFocusables = backSide ? backSide.querySelectorAll('a, button, input, textarea, select, [tabindex]:not([tabindex=\"-1\"])') : [];\n            \n            // Set tabindex based on which side is visible\n            frontFocusables.forEach(el => {\n                el.setAttribute('tabindex', showBack ? '-1' : '0');\n            });\n            \n            backFocusables.forEach(el => {\n                el.setAttribute('tabindex', showBack ? '0' : '-1');\n            });\n        }\n        \n        // Initialize tabindex\n        updateTabIndex(false);\n        \n        // Mouse hover handlers\n        card.addEventListener('mouseenter', function() {\n            setFlipState(true);\n        });\n        \n        card.addEventListener('mouseleave', function() {\n            setFlipState(false);\n        });\n        \n        // Click handler (for mobile/touch devices)\n        card.addEventListener('click', function() {\n            toggleFlip();\n        });\n        \n        // Keyboard handler\n        card.addEventListener('keydown', function(event) {\n            if ((event.code === 'Enter' || event.code === 'Space') && !event.repeat) {\n                event.preventDefault();\n                toggleFlip();\n            }\n        });\n    });\n});"],"names":["document","addEventListener","flipCards","querySelectorAll","forEach","card","cardId","getAttribute","frontSide","getElementById","backSide","setFlipState","isFlipped","setAttribute","String","updateTabIndex","toggleFlip","isPressed","showBack","frontFocusables","backFocusables","el","event","code","repeat","preventDefault"],"sourceRoot":""}