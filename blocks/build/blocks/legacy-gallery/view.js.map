{"version":3,"file":"blocks/legacy-gallery/view.js","mappings":"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","sources":["webpack://theme-blocks/./src/blocks/legacy-gallery/view.js"],"sourcesContent":["/**\n * Legacy Gallery Block JavaScript\n * Handles filmstrip navigation and accessibility\n */\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Initialize all gallery blocks on the page\n    const galleries = document.querySelectorAll('.legacy-gallery-block');\n    galleries.forEach(initGallery);\n});\n\nfunction initGallery(gallery) {\n    const mainImage = gallery.querySelector('[data-gallery-main]');\n    const caption = gallery.querySelector('[data-gallery-caption]');\n    const thumbButtons = gallery.querySelectorAll('[data-gallery-thumb]');\n    const srCurrent = gallery.querySelector('[data-gallery-sr-current]');\n    \n    if (!mainImage || !thumbButtons.length) return;\n    \n    let currentIndex = 0;\n    const totalImages = thumbButtons.length;\n    \n    // Add click handlers to thumbnail buttons\n    thumbButtons.forEach((button, index) => {\n        button.addEventListener('click', () => {\n            showImage(index);\n        });\n        \n        // Add keyboard navigation\n        button.addEventListener('keydown', (e) => {\n            handleKeyboardNavigation(e, index);\n        });\n    });\n    \n    /**\n     * Display the image at the specified index\n     */\n    function showImage(index) {\n        if (index < 0 || index >= totalImages || index === currentIndex) return;\n        \n        const button = thumbButtons[index];\n        const imageUrl = button.dataset.imageUrl;\n        const imageAlt = button.dataset.imageAlt;\n        const imageWidth = button.dataset.imageWidth;\n        const imageHeight = button.dataset.imageHeight;\n        const imageCaption = button.dataset.imageCaption;\n        \n        // Update main image\n        mainImage.src = imageUrl;\n        mainImage.alt = imageAlt;\n        mainImage.width = imageWidth;\n        mainImage.height = imageHeight;\n        \n        // Update caption\n        if (caption) {\n            if (imageCaption) {\n                caption.innerHTML = imageCaption;\n                caption.classList.remove('sr-only');\n            } else {\n                caption.innerHTML = `Image ${index + 1} of ${totalImages}`;\n                caption.classList.add('sr-only');\n            }\n        }\n        \n        // Update active states\n        updateActiveStates(index);\n        \n        // Update screen reader info\n        if (srCurrent) {\n            srCurrent.textContent = `Showing image ${index + 1} of ${totalImages}`;\n        }\n        \n        currentIndex = index;\n    }\n    \n    /**\n     * Update active states and ARIA attributes\n     */\n    function updateActiveStates(activeIndex) {\n        thumbButtons.forEach((button, index) => {\n            const isActive = index === activeIndex;\n            \n            // Update visual active state\n            button.classList.toggle('active', isActive);\n            \n            // Update ARIA attributes\n            button.setAttribute('aria-selected', isActive.toString());\n            button.tabIndex = isActive ? 0 : -1;\n        });\n    }\n    \n    /**\n     * Handle keyboard navigation within the filmstrip\n     */\n    function handleKeyboardNavigation(e, currentButtonIndex) {\n        let newIndex = currentButtonIndex;\n        let handled = false;\n        \n        switch (e.key) {\n            case 'ArrowLeft':\n                newIndex = currentButtonIndex > 0 ? currentButtonIndex - 1 : totalImages - 1;\n                handled = true;\n                break;\n                \n            case 'ArrowRight':\n                newIndex = currentButtonIndex < totalImages - 1 ? currentButtonIndex + 1 : 0;\n                handled = true;\n                break;\n                \n            case 'Home':\n                newIndex = 0;\n                handled = true;\n                break;\n                \n            case 'End':\n                newIndex = totalImages - 1;\n                handled = true;\n                break;\n                \n            case 'Enter':\n            case ' ':\n                // Space or Enter - show this image\n                showImage(currentButtonIndex);\n                handled = true;\n                break;\n        }\n        \n        if (handled) {\n            e.preventDefault();\n            \n            // For arrow keys and Home/End, move focus and show image\n            if (['ArrowLeft', 'ArrowRight', 'Home', 'End'].includes(e.key)) {\n                thumbButtons[newIndex].focus();\n                showImage(newIndex);\n            }\n        }\n    }\n    \n    /**\n     * Optional: Add swipe support for touch devices\n     */\n    function addSwipeSupport() {\n        let startX = null;\n        let startY = null;\n        const minSwipeDistance = 50;\n        \n        mainImage.addEventListener('touchstart', (e) => {\n            startX = e.touches[0].clientX;\n            startY = e.touches[0].clientY;\n        }, { passive: true });\n        \n        mainImage.addEventListener('touchend', (e) => {\n            if (!startX || !startY) return;\n            \n            const endX = e.changedTouches[0].clientX;\n            const endY = e.changedTouches[0].clientY;\n            \n            const deltaX = endX - startX;\n            const deltaY = endY - startY;\n            \n            // Only trigger if horizontal swipe is longer than vertical\n            if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > minSwipeDistance) {\n                if (deltaX > 0) {\n                    // Swipe right - previous image\n                    const prevIndex = currentIndex > 0 ? currentIndex - 1 : totalImages - 1;\n                    showImage(prevIndex);\n                } else {\n                    // Swipe left - next image\n                    const nextIndex = currentIndex < totalImages - 1 ? currentIndex + 1 : 0;\n                    showImage(nextIndex);\n                }\n            }\n            \n            startX = null;\n            startY = null;\n        }, { passive: true });\n    }\n    \n    // Initialize swipe support\n    addSwipeSupport();\n    \n    // Optional: Auto-focus first thumbnail when gallery comes into view\n    // (Useful for keyboard users)\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                // Gallery is visible, but don't auto-focus unless user is keyboard navigating\n                observer.unobserve(entry.target);\n            }\n        });\n    }, { threshold: 0.5 });\n    \n    observer.observe(gallery);\n}"],"names":["document","addEventListener","galleries","querySelectorAll","forEach","initGallery","gallery","mainImage","querySelector","caption","thumbButtons","srCurrent","length","currentIndex","totalImages","button","index","showImage","e","handleKeyboardNavigation","imageUrl","dataset","imageAlt","imageWidth","imageHeight","imageCaption","src","alt","width","height","innerHTML","classList","remove","add","updateActiveStates","textContent","activeIndex","isActive","toggle","setAttribute","toString","tabIndex","currentButtonIndex","newIndex","handled","key","preventDefault","includes","focus","addSwipeSupport","startX","startY","minSwipeDistance","touches","clientX","clientY","passive","endX","changedTouches","endY","deltaX","deltaY","Math","abs","prevIndex","nextIndex","observer","IntersectionObserver","entries","entry","isIntersecting","unobserve","target","threshold","observe"],"sourceRoot":""}