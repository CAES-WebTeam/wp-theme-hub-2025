{"version":3,"file":"blocks/mobile-container/view.js","mappings":"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","sources":["webpack://theme-blocks/./src/blocks/mobile-container/view.js"],"sourcesContent":["/**\n * Mobile Container JavaScript\n * Handles hamburger menu toggle functionality and overlay behavior\n */\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Initialize all mobile containers on the page\n    const mobileContainers = document.querySelectorAll('.mobile-container');\n    \n    mobileContainers.forEach(initMobileContainer);\n});\n\nfunction initMobileContainer(container) {\n    const trigger = container.querySelector('[data-mobile-trigger]');\n    const overlay = container.querySelector('[data-mobile-overlay]');\n    const closeTriggers = container.querySelectorAll('[data-overlay-close]');\n    \n    if (!trigger || !overlay) return;\n    \n    let isOpen = false;\n    let previousFocus = null;\n    \n    // Open overlay\n    function openOverlay() {\n        if (isOpen) return;\n        \n        // Store current focus for restoration later\n        previousFocus = document.activeElement;\n        \n        isOpen = true;\n        trigger.setAttribute('aria-expanded', 'true');\n        overlay.setAttribute('aria-hidden', 'false');\n        overlay.classList.add('is-open');\n        \n        // Prevent body scroll\n        document.body.style.overflow = 'hidden';\n        \n        // Focus management - focus first focusable element in overlay\n        setTimeout(() => {\n            const firstFocusable = overlay.querySelector(\n                'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n            );\n            if (firstFocusable) {\n                firstFocusable.focus();\n            }\n        }, 100); // Small delay to allow animation to start\n        \n        // Add class to trigger for styling\n        trigger.classList.add('is-active');\n    }\n    \n    // Close overlay\n    function closeOverlay() {\n        if (!isOpen) return;\n        \n        isOpen = false;\n        trigger.setAttribute('aria-expanded', 'false');\n        overlay.setAttribute('aria-hidden', 'true');\n        overlay.classList.remove('is-open');\n        \n        // Restore body scroll\n        document.body.style.overflow = '';\n        \n        // Restore focus\n        if (previousFocus) {\n            previousFocus.focus();\n            previousFocus = null;\n        }\n        \n        // Remove active class from trigger\n        trigger.classList.remove('is-active');\n    }\n    \n    // Toggle overlay\n    function toggleOverlay() {\n        if (isOpen) {\n            closeOverlay();\n        } else {\n            openOverlay();\n        }\n    }\n    \n    // Event listeners\n    trigger.addEventListener('click', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleOverlay();\n    });\n    \n    // Close triggers (close button, backdrop)\n    closeTriggers.forEach(closeTrigger => {\n        closeTrigger.addEventListener('click', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            closeOverlay();\n        });\n    });\n    \n    // Keyboard handling\n    document.addEventListener('keydown', function(e) {\n        if (!isOpen) return;\n        \n        // Escape key closes overlay\n        if (e.key === 'Escape') {\n            e.preventDefault();\n            closeOverlay();\n            return;\n        }\n        \n        // Tab key trap focus within overlay\n        if (e.key === 'Tab') {\n            trapFocus(e, overlay);\n        }\n    });\n    \n    // Close on window resize if we move to desktop size\n    window.addEventListener('resize', function() {\n        const breakpoint = container.dataset.mobileBreakpoint || '768px';\n        const breakpointValue = parseInt(breakpoint);\n        \n        if (window.innerWidth >= breakpointValue && isOpen) {\n            closeOverlay();\n        }\n    });\n}\n\n/**\n * Trap focus within the overlay for accessibility\n */\nfunction trapFocus(e, container) {\n    const focusableElements = container.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n    \n    if (focusableElements.length === 0) return;\n    \n    const firstFocusable = focusableElements[0];\n    const lastFocusable = focusableElements[focusableElements.length - 1];\n    \n    // If shift+tab on first element, focus last element\n    if (e.shiftKey && document.activeElement === firstFocusable) {\n        e.preventDefault();\n        lastFocusable.focus();\n    }\n    // If tab on last element, focus first element\n    else if (!e.shiftKey && document.activeElement === lastFocusable) {\n        e.preventDefault();\n        firstFocusable.focus();\n    }\n}"],"names":["document","addEventListener","mobileContainers","querySelectorAll","forEach","initMobileContainer","container","trigger","querySelector","overlay","closeTriggers","isOpen","previousFocus","openOverlay","activeElement","setAttribute","classList","add","body","style","overflow","setTimeout","firstFocusable","focus","closeOverlay","remove","toggleOverlay","e","preventDefault","stopPropagation","closeTrigger","key","trapFocus","window","breakpoint","dataset","mobileBreakpoint","breakpointValue","parseInt","innerWidth","focusableElements","length","lastFocusable","shiftKey"],"sourceRoot":""}