{"version":3,"file":"blocks/relevanssi-search/view.js","mappings":"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","sources":["webpack://theme-blocks/./src/blocks/relevanssi-search/view.js"],"sourcesContent":["/**\n * This script handles the frontend interactivity for the Relevanssi Search Filters block.\n * It uses AJAX to fetch search results dynamically without page reloads.\n */\ndocument.addEventListener('DOMContentLoaded', () => {\n    const searchFilterBlocks = document.querySelectorAll('.wp-block-caes-hub-relevanssi-search');\n\n    searchFilterBlocks.forEach(block => {\n        const form = block.querySelector('.relevanssi-search-form');\n        if (!form) return;\n\n        const searchInput = form.querySelector('#relevanssi-search-input');\n        const sortByDateSelect = form.querySelector('#relevanssi-sort-by-date');\n        const postTypeSelect = form.querySelector('#relevanssi-post-type-filter');\n        const languageSelect = form.querySelector('#relevanssi-language-filter'); // Add language select\n        const resultsContainer = block.querySelector('.relevanssi-ajax-search-results-container');\n        const blockTaxonomySlug = block.dataset.taxonomySlug || 'category';\n        const blockAllowedPostTypes = block.dataset.allowedPostTypes ? JSON.parse(block.dataset.allowedPostTypes) : [];\n        const showLanguageFilter = block.dataset.showLanguageFilter === 'true'; // Get language filter state\n\n        // Modal elements - Topics\n        const openTopicsModalButton = block.querySelector('.open-topics-modal');\n        const topicsModal = block.querySelector('#topics-modal');\n        const topicsModalCloseButton = topicsModal ? topicsModal.querySelector('.topics-modal-close') : null;\n        const applyTopicsFilterButton = topicsModal ? topicsModal.querySelector('.apply-topics-filter') : null;\n\n        // Modal elements - Authors\n        const openAuthorsModalButton = block.querySelector('.open-authors-modal');\n        const authorsModal = block.querySelector('#authors-modal');\n        const authorsModalCloseButton = authorsModal ? authorsModal.querySelector('.authors-modal-close') : null;\n        const applyAuthorsFilterButton = authorsModal ? authorsModal.querySelector('.apply-authors-filter') : null;\n\n        // Ensure all checkbox labels have a consistent class for searching\n        if (topicsModal) {\n            topicsModal.querySelectorAll('.topics-modal-checkboxes label').forEach(label => {\n                label.classList.add('topic-checkbox-item');\n            });\n        }\n\n        if (authorsModal) {\n            authorsModal.querySelectorAll('.authors-modal-checkboxes label').forEach(label => {\n                label.classList.add('author-checkbox-item');\n            });\n        }\n\n        // Function to update the search title (H1 only)\n        const updateSearchTitle = (searchTerm) => {\n            let titleElement = block.querySelector('.search-results-title');\n\n            if (!titleElement) {\n                // Create title if it doesn't exist\n                titleElement = document.createElement('h1');\n                titleElement.className = 'search-results-title';\n                // Insert before the form\n                form.parentNode.insertBefore(titleElement, form);\n            }\n\n            // H1 is always just the base heading\n            const customHeading = block.getAttribute('data-custom-heading');\n            const baseHeading = customHeading || 'Search';\n            titleElement.textContent = baseHeading;\n            titleElement.style.display = 'block';\n        };\n\n        // Function to update the H2 results heading (called after AJAX response)\n        const updateResultsHeading = (searchTerm) => {\n            let existingHeading = block.querySelector('.search-results-heading');\n            if (existingHeading) {\n                existingHeading.remove();\n            }\n\n            if (searchTerm && searchTerm.trim()) {\n                const resultsHeading = document.createElement('h2');\n                resultsHeading.className = 'search-results-heading';\n                resultsHeading.textContent = `Results for: \"${searchTerm.trim()}\"`;\n                resultsHeading.style.display = 'block';\n\n                // Find the selected filters container\n                const selectedContainer = block.querySelector('.selected-topic-filters');\n\n                // Insert AFTER the selected filters container if it exists and has content,\n                // otherwise, insert after the form.\n                if (selectedContainer && selectedContainer.children.length > 0) {\n                    selectedContainer.parentNode.insertBefore(resultsHeading, selectedContainer.nextSibling);\n                } else if (form) {\n                    form.parentNode.insertBefore(resultsHeading, form.nextSibling);\n                } else {\n                    // Fallback if neither exists\n                    block.prepend(resultsHeading);\n                }\n            }\n        };\n\n        // Function to update or create the results count (keep this as previously modified)\n        const updateResultsCount = (count) => {\n            let countElement = block.querySelector('.search-results-count');\n            const resultsHeading = block.querySelector('.search-results-heading'); // Get the H2 element\n\n            if (!countElement) {\n                countElement = document.createElement('div');\n                countElement.className = 'search-results-count';\n\n                // Insert AFTER the results heading (H2) if it exists\n                if (resultsHeading) {\n                    resultsHeading.parentNode.insertBefore(countElement, resultsHeading.nextSibling);\n                } else {\n                    // Fallback: if no H2 (e.g., no search term), insert after selected filters or form\n                    const selectedContainer = block.querySelector('.selected-topic-filters');\n                    if (selectedContainer) {\n                        selectedContainer.parentNode.insertBefore(countElement, selectedContainer.nextSibling);\n                    } else {\n                        form.parentNode.insertBefore(countElement, form.nextSibling);\n                    }\n                }\n            }\n\n            if (count !== undefined && count !== null && count > 0) {\n                if (count === 1) {\n                    countElement.textContent = '1 result found';\n                } else {\n                    countElement.textContent = `${count} results found`;\n                }\n                countElement.style.display = 'block';\n            } else {\n                countElement.style.display = 'none';\n            }\n        };\n\n        // Function to fetch and display search results\n        const fetchAndDisplaySearchResults = (page = 1) => {\n            if (!resultsContainer) return;\n\n            // Use the EXACT same beautiful plant animation structure from the original!\n            resultsContainer.innerHTML = `\n                <div class=\"plant-loading-container\">\n                    <div class=\"plant-garden\">\n                        <div class=\"plant\">\n                            <div class=\"leaf leaf-left dark\"></div>\n                            <div class=\"leaf leaf-right\"></div>\n                            <div class=\"leaf leaf-left-2\"></div>\n                            <div class=\"leaf leaf-right-2 darker\"></div>\n                            <div class=\"leaf leaf-left-3 dark\"></div>\n                            <div class=\"leaf leaf-right-3\"></div>\n                            <div class=\"leaf leaf-left-4\"></div>\n                            <div class=\"leaf leaf-right-4 dark\"></div>\n                            <div class=\"leaf leaf-left-5 darker\"></div>\n                            <div class=\"leaf leaf-right-5\"></div>\n                        </div>\n        \n                        <div class=\"plant-2\">\n                            <div class=\"leaf p2-leaf-left dark\"></div>\n                            <div class=\"leaf p2-leaf-right\"></div>\n                            <div class=\"leaf p2-leaf-left-2 darker\"></div>\n                            <div class=\"leaf p2-leaf-right-2\"></div>\n                            <div class=\"leaf p2-leaf-left-3 dark\"></div>\n                            <div class=\"leaf p2-leaf-right-3\"></div>\n                        </div>\n        \n                        <div class=\"plant-3\">\n                            <div class=\"leaf p3-leaf-left\"></div>\n                            <div class=\"leaf p3-leaf-right dark\"></div>\n                            <div class=\"leaf p3-leaf-left-2 darker\"></div>\n                            <div class=\"leaf p3-leaf-right-2\"></div>\n                            <div class=\"leaf p3-leaf-left-3 dark\"></div>\n                            <div class=\"leaf p3-leaf-right-3\"></div>\n                            <div class=\"leaf p3-leaf-left-4\"></div>\n                            <div class=\"leaf p3-leaf-right-4 darker\"></div>\n                        </div>\n                    </div>\n                    <p class=\"loading-text\">Loading results...</p>\n                </div>\n            `;\n\n            const formData = new FormData();\n\n            // Security: Add nonce and action for the WordPress AJAX handler.\n            formData.append('action', 'caes_hub_search_results');\n            if (window.caesHubAjax && window.caesHubAjax.nonce) {\n                formData.append('security', caesHubAjax.nonce);\n            }\n\n            // Collect data from form elements\n            const searchTerm = searchInput ? searchInput.value : '';\n            formData.append('s', searchTerm);\n            formData.append('paged', page);\n            formData.append('taxonomySlug', blockTaxonomySlug);\n            formData.append('allowedPostTypes', JSON.stringify(blockAllowedPostTypes));\n\n            // Pass filter toggle states\n            formData.append('showDateSort', sortByDateSelect ? 'true' : 'false');\n            formData.append('showPostTypeFilter', postTypeSelect ? 'true' : 'false');\n            formData.append('showTopicFilter', topicsModal ? 'true' : 'false');\n            formData.append('showAuthorFilter', authorsModal ? 'true' : 'false');\n            formData.append('showLanguageFilter', showLanguageFilter ? 'true' : 'false'); // Add language filter state\n\n            if (sortByDateSelect) {\n                const selectedOrder = sortByDateSelect.value;\n                if (selectedOrder === 'post_date_desc') {\n                    formData.append('orderby', 'post_date');\n                    formData.append('order', 'desc');\n                } else if (selectedOrder === 'post_date_asc') {\n                    formData.append('orderby', 'post_date');\n                    formData.append('order', 'asc');\n                } else {\n                    formData.append('orderby', 'relevance');\n                }\n            }\n\n            if (postTypeSelect && postTypeSelect.value) {\n                formData.append('post_type', postTypeSelect.value);\n            }\n\n            // Handle language selection\n            if (languageSelect && languageSelect.value) {\n                formData.append('language', languageSelect.value);\n            }\n\n            // Initialize checkedTopicSlugs outside the if block\n            let checkedTopicSlugs = [];\n\n            if (topicsModal) {\n                checkedTopicSlugs = Array.from(topicsModal.querySelectorAll('input[type=\"checkbox\"]:checked'))\n                    .map(cb => cb.value)\n                    .filter(slug => slug !== '');\n\n                if (checkedTopicSlugs.length > 0) {\n                    checkedTopicSlugs.forEach(slug => {\n                        formData.append(`${blockTaxonomySlug}[]`, slug);\n                    });\n                }\n            }\n\n            // Initialize checkedAuthorSlugs for authors filter - using SLUGS instead of IDs\n            let checkedAuthorSlugs = [];\n\n            if (authorsModal) {\n                checkedAuthorSlugs = Array.from(authorsModal.querySelectorAll('input[type=\"checkbox\"]:checked'))\n                    .map(cb => cb.value)\n                    .filter(slug => slug !== '');\n\n                if (checkedAuthorSlugs.length > 0) {\n                    checkedAuthorSlugs.forEach(slug => {\n                        formData.append('author_slug[]', slug); // Use author_slug[] instead of author[]\n                    });\n                }\n            }\n\n            // Update the search title (H1 only)\n            updateSearchTitle(searchTerm);\n\n            // Track when the fetch starts and ensure minimum display time for animation\n            const fetchStartTime = Date.now();\n            const minimumDisplayTime = 0;\n\n            fetch(caesHubAjax.ajaxurl, {\n                method: 'POST',\n                body: formData,\n            })\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error(`HTTP error! status: ${response.status}`);\n                    }\n                    return response.text();\n                })\n                .then(html => {\n                    const fetchEndTime = Date.now();\n                    const elapsedTime = fetchEndTime - fetchStartTime;\n                    const remainingTime = Math.max(0, minimumDisplayTime - elapsedTime);\n\n                    // Wait for the remaining time before showing results\n                    setTimeout(() => {\n                        resultsContainer.innerHTML = html;\n\n                        // Update the H2 results heading AFTER DOM is updated\n                        updateResultsHeading(searchTerm);\n\n                        // Extract results count from the response\n                        let resultsCount = null;\n\n                        // Method 1: Look for a data attribute on the results container\n                        const resultsWrapper = resultsContainer.querySelector('[data-results-count]');\n                        if (resultsWrapper) {\n                            resultsCount = parseInt(resultsWrapper.getAttribute('data-results-count'), 10);\n                        }\n\n                        // Method 2: Look for a hidden input with the count\n                        const countInput = resultsContainer.querySelector('input[name=\"results_count\"]');\n                        if (countInput && resultsCount === null) {\n                            resultsCount = parseInt(countInput.value, 10);\n                        }\n\n                        // Method 3: Look for a specific element with the count\n                        const countElement = resultsContainer.querySelector('.wp-query-results-count');\n                        if (countElement && resultsCount === null) {\n                            resultsCount = parseInt(countElement.textContent, 10);\n                        }\n\n                        // Method 4: Try to parse from existing pagination or results info\n                        if (resultsCount === null) {\n                            // Look for WordPress pagination info\n                            const paginationInfo = resultsContainer.querySelector('.pagination-info, .wp-pagenavi');\n                            if (paginationInfo) {\n                                const match = paginationInfo.textContent.match(/(\\d+)\\s+(?:results?|posts?|items?)/i);\n                                if (match) {\n                                    resultsCount = parseInt(match[1], 10);\n                                }\n                            }\n                        }\n\n                        // Method 5: Count actual result items as fallback\n                        if (resultsCount === null) {\n                            const resultItems = resultsContainer.querySelectorAll('.search-result-item, article, .post, .result-item');\n                            if (resultItems.length > 0) {\n                                // This is just the current page count, not total - but better than nothing\n                                resultsCount = resultItems.length;\n                            }\n                        }\n\n                        updateResultsCount(resultsCount);\n                        attachPaginationListeners();\n                    }, remainingTime);\n                })\n                .catch(error => {\n                    console.error('Error fetching search results:', error);\n                    // Still respect minimum time even on error\n                    const fetchEndTime = Date.now();\n                    const elapsedTime = fetchEndTime - fetchStartTime;\n                    const remainingTime = Math.max(0, minimumDisplayTime - elapsedTime);\n\n                    setTimeout(() => {\n                        resultsContainer.innerHTML = '<p class=\"error-message\">Error loading results. Please try again.</p>';\n                        updateResultsCount(null); // Hide count on error\n                    }, remainingTime);\n                });\n\n            updateURL(formData);\n            renderSelectedFilters(checkedTopicSlugs, checkedAuthorSlugs);\n        };\n\n\n        // Function to update the browser URL\n        const updateURL = (formData) => {\n            const params = new URLSearchParams();\n            // Create a clean set of params for the URL\n            for (const [key, value] of formData.entries()) {\n                // IMPORTANT: Removed 'paged' from the exclusion list so it's included in the URL\n                if (!['action', 'security', 'allowedPostTypes', 'showDateSort', 'showPostTypeFilter', 'showTopicFilter', 'showAuthorFilter', 'showLanguageFilter'].includes(key)) {\n                    // Handle array parameters like taxonomy slugs and author slugs\n                    if (key.endsWith('[]')) {\n                        const paramName = key.slice(0, -2);\n                        // Append multiple values for the same parameter name\n                        params.append(paramName, value);\n                    } else {\n                        params.set(key, value);\n                    }\n                }\n            }\n            const newUrl = `${window.location.pathname}?${params.toString()}`;\n            window.history.pushState({ path: newUrl }, '', newUrl);\n        };\n\n        const renderSelectedFilters = (topicSlugs, authorSlugs) => {\n            const selectedContainer = block.querySelector('.selected-topic-filters');\n            if (!selectedContainer) return;\n\n            selectedContainer.innerHTML = ''; // Clear old pills\n\n            const hasTopicFilters = topicSlugs && topicSlugs.length > 0;\n            const hasAuthorFilters = authorSlugs && authorSlugs.length > 0;\n\n            if (!hasTopicFilters && !hasAuthorFilters) return;\n\n            // Add \"Filters applied:\" text\n            const filtersLabel = document.createElement('span');\n            filtersLabel.textContent = 'Filters applied:';\n            filtersLabel.className = 'filters-applied-label';\n            selectedContainer.appendChild(filtersLabel);\n\n            // Create container for the filter pills and clear button\n            const filtersWrapper = document.createElement('div');\n            filtersWrapper.className = 'filters-wrapper';\n\n            // Render topic filter pills\n            if (hasTopicFilters) {\n                topicSlugs.forEach(slug => {\n                    const checkbox = topicsModal.querySelector(`input[value=\"${slug}\"]`);\n                    const label = checkbox?.parentElement?.textContent.trim() || slug;\n\n                    const pill = document.createElement('div');\n                    pill.className = 'topic-pill';\n\n                    const textSpan = document.createElement('span');\n                    textSpan.textContent = label;\n\n                    const removeBtn = document.createElement('button');\n                    removeBtn.setAttribute('type', 'button');\n                    removeBtn.setAttribute('aria-label', `Remove filter ${label}`);\n                    removeBtn.innerHTML = '&times;';\n                    removeBtn.addEventListener('click', () => {\n                        if (checkbox) checkbox.checked = false;\n                        fetchAndDisplaySearchResults();\n                    });\n\n                    pill.appendChild(textSpan);\n                    pill.appendChild(removeBtn);\n                    filtersWrapper.appendChild(pill);\n                });\n            }\n\n            // Render author filter pills - now using author slugs\n            if (hasAuthorFilters) {\n                authorSlugs.forEach(slug => {\n                    const checkbox = authorsModal.querySelector(`input[value=\"${slug}\"]`);\n                    const label = checkbox?.parentElement?.textContent.trim() || slug;\n\n                    const pill = document.createElement('div');\n                    pill.className = 'author-pill';\n\n                    const textSpan = document.createElement('span');\n                    textSpan.textContent = label;\n\n                    const removeBtn = document.createElement('button');\n                    removeBtn.setAttribute('type', 'button');\n                    removeBtn.setAttribute('aria-label', `Remove filter ${label}`);\n                    removeBtn.innerHTML = '&times;';\n                    removeBtn.addEventListener('click', () => {\n                        if (checkbox) checkbox.checked = false;\n                        fetchAndDisplaySearchResults();\n                    });\n\n                    pill.appendChild(textSpan);\n                    pill.appendChild(removeBtn);\n                    filtersWrapper.appendChild(pill);\n                });\n            }\n\n            const clearAllBtn = document.createElement('button');\n            clearAllBtn.textContent = 'Clear all';\n            clearAllBtn.className = 'clear-all';\n            clearAllBtn.setAttribute('type', 'button');\n            clearAllBtn.setAttribute('aria-label', 'Clear all selected filters');\n            clearAllBtn.addEventListener('click', () => {\n                if (topicsModal) {\n                    topicsModal.querySelectorAll('input[type=\"checkbox\"]:checked').forEach(cb => cb.checked = false);\n                }\n                if (authorsModal) {\n                    authorsModal.querySelectorAll('input[type=\"checkbox\"]:checked').forEach(cb => cb.checked = false);\n                }\n                fetchAndDisplaySearchResults();\n            });\n\n            filtersWrapper.appendChild(clearAllBtn);\n            selectedContainer.appendChild(filtersWrapper);\n        };\n\n        // Function to handle pagination clicks\n        const attachPaginationListeners = () => {\n            resultsContainer.querySelectorAll('.page-numbers').forEach(link => {\n                link.addEventListener('click', e => {\n                    e.preventDefault();\n                    const url = new URL(link.href);\n                    let page = 1; // Default to page 1\n\n                    // Attempt to get 'paged' from query parameters first (if any)\n                    if (url.searchParams.has('paged')) {\n                        page = parseInt(url.searchParams.get('paged'), 10) || 1;\n                    } else {\n                        // If 'paged' not in query params, try to extract from path (e.g., /page/2/)\n                        const pathSegments = url.pathname.split('/');\n                        const pageIndex = pathSegments.indexOf('page');\n                        if (pageIndex > -1 && pageIndex + 1 < pathSegments.length) {\n                            const pageNum = parseInt(pathSegments[pageIndex + 1], 10);\n                            if (!isNaN(pageNum) && pageNum > 0) {\n                                page = pageNum;\n                            }\n                        }\n                    }\n\n                    fetchAndDisplaySearchResults(page); // Pass the extracted page number\n                });\n            });\n        };\n\n        // Check for initial results count on page load\n        const extractInitialResultsCount = () => {\n            let resultsCount = null;\n\n            // Try the same methods as in fetchAndDisplaySearchResults\n            const resultsWrapper = resultsContainer.querySelector('[data-results-count]');\n            if (resultsWrapper) {\n                resultsCount = parseInt(resultsWrapper.getAttribute('data-results-count'), 10);\n            }\n\n            if (resultsCount === null) {\n                const countInput = resultsContainer.querySelector('input[name=\"results_count\"]');\n                if (countInput) {\n                    resultsCount = parseInt(countInput.value, 10);\n                }\n            }\n\n            if (resultsCount === null) {\n                const countElement = resultsContainer.querySelector('.wp-query-results-count');\n                if (countElement) {\n                    resultsCount = parseInt(countElement.textContent, 10);\n                }\n            }\n\n            if (resultsCount !== null) {\n                updateResultsCount(resultsCount);\n            }\n        };\n\n        // Initialize on page load\n        const urlParams = new URLSearchParams(window.location.search);\n        const hasActiveFilters = urlParams.has('s') ||\n            urlParams.has('orderby') ||\n            urlParams.has('post_type') ||\n            urlParams.has('language') || // Add language to active filters check\n            urlParams.getAll(blockTaxonomySlug).length ||\n            (authorsModal && urlParams.getAll('author_slug').length); // Check for author_slug instead of author\n\n        if (hasActiveFilters) {\n            fetchAndDisplaySearchResults();\n        }\n\n        // Update search title on initial page load (always show an H1)\n        const initialSearchTerm = searchInput ? searchInput.value : '';\n        updateSearchTitle(initialSearchTerm);\n\n        // Call this on initial page load if there are existing results\n        if (resultsContainer && resultsContainer.children.length > 0) {\n            extractInitialResultsCount();\n        }\n\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n            fetchAndDisplaySearchResults();\n        });\n\n        if (sortByDateSelect) sortByDateSelect.addEventListener('change', () => fetchAndDisplaySearchResults());\n        if (postTypeSelect) postTypeSelect.addEventListener('change', () => fetchAndDisplaySearchResults());\n        if (languageSelect) languageSelect.addEventListener('change', () => fetchAndDisplaySearchResults()); // Add language change listener\n\n        // --- Topics Modal Logic ---\n        if (openTopicsModalButton && topicsModal) {\n            let previouslyFocusedElement;\n\n            // Helper to get all tabbable elements within the modal\n            const getTopicsTabbableElements = () => {\n                return Array.from(topicsModal.querySelectorAll(\n                    'a[href]:not([disabled]), button:not([disabled]), input:not([disabled]), select:not([disabled]), textarea:not([disabled]), [tabindex]:not([tabindex=\"-1\"]):not([disabled])'\n                )).filter(el => el.offsetWidth > 0 || el.offsetHeight > 0); // Filter out hidden elements\n            };\n\n            const trapTopicsFocus = (e) => {\n                const tabbableElements = getTopicsTabbableElements();\n                if (tabbableElements.length === 0) return; // No tabbable elements, nothing to trap\n\n                const firstTabbableElement = tabbableElements[0];\n                const lastTabbableElement = tabbableElements[tabbableElements.length - 1];\n\n                if (e.key === 'Tab') {\n                    if (e.shiftKey) { // Shift + Tab\n                        if (document.activeElement === firstTabbableElement) {\n                            lastTabbableElement.focus();\n                            e.preventDefault();\n                        }\n                    } else { // Tab\n                        if (document.activeElement === lastTabbableElement) {\n                            firstTabbableElement.focus();\n                            e.preventDefault();\n                        }\n                    }\n                } else if (e.key === 'Escape') {\n                    closeTopicsModal();\n                }\n            };\n\n            const openTopicsModal = () => {\n                previouslyFocusedElement = document.activeElement;\n                topicsModal.style.display = 'flex';\n                openTopicsModalButton.setAttribute('aria-expanded', 'true');\n                topicsModal.removeAttribute('aria-hidden');\n\n                // Set focus to the first tabbable element inside the modal\n                const tabbableElements = getTopicsTabbableElements();\n                if (tabbableElements.length > 0) {\n                    tabbableElements[0].focus();\n                }\n\n                document.addEventListener('keydown', trapTopicsFocus);\n            };\n\n            const closeTopicsModal = () => {\n                topicsModal.style.display = 'none';\n                openTopicsModalButton.setAttribute('aria-expanded', 'false');\n                topicsModal.setAttribute('aria-hidden', 'true');\n\n                document.removeEventListener('keydown', trapTopicsFocus);\n                if (previouslyFocusedElement) {\n                    previouslyFocusedElement.focus();\n                }\n            };\n\n            openTopicsModalButton.addEventListener('click', openTopicsModal);\n\n            if (topicsModalCloseButton) {\n                topicsModalCloseButton.addEventListener('click', closeTopicsModal);\n            }\n\n            if (applyTopicsFilterButton) {\n                applyTopicsFilterButton.addEventListener('click', () => {\n                    fetchAndDisplaySearchResults();\n                    closeTopicsModal();\n                });\n            } else {\n                // Fallback if no specific 'Apply Filter' button (though recommended to have one)\n                topicsModal.querySelectorAll('input[type=\"checkbox\"]').forEach(checkbox => {\n                    checkbox.addEventListener('change', () => {\n                        fetchAndDisplaySearchResults();\n                        // Consider if you want to close the modal here or only with an explicit apply button\n                        // If you uncomment closeTopicsModal(), users might find it jarring if modal closes on every click.\n                        // closeTopicsModal();\n                    });\n                });\n            }\n\n            // Close modal if clicking outside of it\n            window.addEventListener('click', (event) => {\n                if (event.target === topicsModal) {\n                    closeTopicsModal();\n                }\n            });\n\n            // Topic search inside the modal\n            const topicSearchInput = topicsModal.querySelector('.topics-modal-search-input');\n            if (topicSearchInput) {\n                topicSearchInput.addEventListener('input', (e) => {\n                    const searchTerm = e.target.value.toLowerCase();\n                    topicsModal.querySelectorAll('.topic-checkbox-item').forEach(item => {\n                        const label = item.textContent.toLowerCase();\n                        item.style.display = label.includes(searchTerm) ? '' : 'none';\n                    });\n                });\n            }\n        }\n\n        // --- Authors Modal Logic ---\n        if (openAuthorsModalButton && authorsModal) {\n            let previouslyFocusedElementAuthors;\n\n            // Helper to get all tabbable elements within the authors modal\n            const getAuthorsTabbableElements = () => {\n                return Array.from(authorsModal.querySelectorAll(\n                    'a[href]:not([disabled]), button:not([disabled]), input:not([disabled]), select:not([disabled]), textarea:not([disabled]), [tabindex]:not([tabindex=\"-1\"]):not([disabled])'\n                )).filter(el => el.offsetWidth > 0 || el.offsetHeight > 0); // Filter out hidden elements\n            };\n\n            const trapAuthorsFocus = (e) => {\n                const tabbableElements = getAuthorsTabbableElements();\n                if (tabbableElements.length === 0) return; // No tabbable elements, nothing to trap\n\n                const firstTabbableElement = tabbableElements[0];\n                const lastTabbableElement = tabbableElements[tabbableElements.length - 1];\n\n                if (e.key === 'Tab') {\n                    if (e.shiftKey) { // Shift + Tab\n                        if (document.activeElement === firstTabbableElement) {\n                            lastTabbableElement.focus();\n                            e.preventDefault();\n                        }\n                    } else { // Tab\n                        if (document.activeElement === lastTabbableElement) {\n                            firstTabbableElement.focus();\n                            e.preventDefault();\n                        }\n                    }\n                } else if (e.key === 'Escape') {\n                    closeAuthorsModal();\n                }\n            };\n\n            const openAuthorsModal = () => {\n                previouslyFocusedElementAuthors = document.activeElement;\n                authorsModal.style.display = 'flex';\n                openAuthorsModalButton.setAttribute('aria-expanded', 'true');\n                authorsModal.removeAttribute('aria-hidden');\n\n                // Set focus to the first tabbable element inside the modal\n                const tabbableElements = getAuthorsTabbableElements();\n                if (tabbableElements.length > 0) {\n                    tabbableElements[0].focus();\n                }\n\n                document.addEventListener('keydown', trapAuthorsFocus);\n            };\n\n            const closeAuthorsModal = () => {\n                authorsModal.style.display = 'none';\n                openAuthorsModalButton.setAttribute('aria-expanded', 'false');\n                authorsModal.setAttribute('aria-hidden', 'true');\n\n                document.removeEventListener('keydown', trapAuthorsFocus);\n                if (previouslyFocusedElementAuthors) {\n                    previouslyFocusedElementAuthors.focus();\n                }\n            };\n\n            openAuthorsModalButton.addEventListener('click', openAuthorsModal);\n\n            if (authorsModalCloseButton) {\n                authorsModalCloseButton.addEventListener('click', closeAuthorsModal);\n            }\n\n            if (applyAuthorsFilterButton) {\n                applyAuthorsFilterButton.addEventListener('click', () => {\n                    fetchAndDisplaySearchResults();\n                    closeAuthorsModal();\n                });\n            } else {\n                // Fallback if no specific 'Apply Filter' button (though recommended to have one)\n                authorsModal.querySelectorAll('input[type=\"checkbox\"]').forEach(checkbox => {\n                    checkbox.addEventListener('change', () => {\n                        fetchAndDisplaySearchResults();\n                        // Consider if you want to close the modal here or only with an explicit apply button\n                        // If you uncomment closeAuthorsModal(), users might find it jarring if modal closes on every click.\n                        // closeAuthorsModal();\n                    });\n                });\n            }\n\n            // Close modal if clicking outside of it\n            window.addEventListener('click', (event) => {\n                if (event.target === authorsModal) {\n                    closeAuthorsModal();\n                }\n            });\n\n            // Author search inside the modal\n            const authorSearchInput = authorsModal.querySelector('.authors-modal-search-input');\n            if (authorSearchInput) {\n                authorSearchInput.addEventListener('input', (e) => {\n                    const searchTerm = e.target.value.toLowerCase();\n                    authorsModal.querySelectorAll('.author-checkbox-item').forEach(item => {\n                        const label = item.textContent.toLowerCase();\n                        item.style.display = label.includes(searchTerm) ? '' : 'none';\n                    });\n                });\n            }\n        }\n\n        attachPaginationListeners();\n    });\n});"],"names":["document","addEventListener","searchFilterBlocks","querySelectorAll","forEach","block","form","querySelector","searchInput","sortByDateSelect","postTypeSelect","languageSelect","resultsContainer","blockTaxonomySlug","dataset","taxonomySlug","blockAllowedPostTypes","allowedPostTypes","JSON","parse","showLanguageFilter","openTopicsModalButton","topicsModal","topicsModalCloseButton","applyTopicsFilterButton","openAuthorsModalButton","authorsModal","authorsModalCloseButton","applyAuthorsFilterButton","label","classList","add","updateSearchTitle","searchTerm","titleElement","createElement","className","parentNode","insertBefore","customHeading","getAttribute","baseHeading","textContent","style","display","updateResultsHeading","existingHeading","remove","trim","resultsHeading","selectedContainer","children","length","nextSibling","prepend","updateResultsCount","count","countElement","undefined","fetchAndDisplaySearchResults","page","innerHTML","formData","FormData","append","window","caesHubAjax","nonce","value","stringify","selectedOrder","checkedTopicSlugs","Array","from","map","cb","filter","slug","checkedAuthorSlugs","fetchStartTime","Date","now","minimumDisplayTime","fetch","ajaxurl","method","body","then","response","ok","Error","status","text","html","fetchEndTime","elapsedTime","remainingTime","Math","max","setTimeout","resultsCount","resultsWrapper","parseInt","countInput","paginationInfo","match","resultItems","attachPaginationListeners","catch","error","console","updateURL","renderSelectedFilters","params","URLSearchParams","key","entries","includes","endsWith","paramName","slice","set","newUrl","location","pathname","toString","history","pushState","path","topicSlugs","authorSlugs","hasTopicFilters","hasAuthorFilters","filtersLabel","appendChild","filtersWrapper","checkbox","parentElement","pill","textSpan","removeBtn","setAttribute","checked","clearAllBtn","link","e","preventDefault","url","URL","href","searchParams","has","get","pathSegments","split","pageIndex","indexOf","pageNum","isNaN","extractInitialResultsCount","urlParams","search","hasActiveFilters","getAll","initialSearchTerm","previouslyFocusedElement","getTopicsTabbableElements","el","offsetWidth","offsetHeight","trapTopicsFocus","tabbableElements","firstTabbableElement","lastTabbableElement","shiftKey","activeElement","focus","closeTopicsModal","openTopicsModal","removeAttribute","removeEventListener","event","target","topicSearchInput","toLowerCase","item","previouslyFocusedElementAuthors","getAuthorsTabbableElements","trapAuthorsFocus","closeAuthorsModal","openAuthorsModal","authorSearchInput"],"sourceRoot":""}