(()=>{function e(){document.querySelectorAll(".responsitable-wrapper").forEach((e=>{const t=e.querySelector("table");t&&(e.classList.remove("responsitable-scroll"),t.scrollWidth>e.clientWidth&&e.classList.add("responsitable-scroll"))}))}document.addEventListener("DOMContentLoaded",(function(){const t=document.createElement("a");t.classList.add("caes-hub-to-top"),t.href="#",t.innerHTML="<span>Back to top</span>",document.querySelector("main").appendChild(t),window.addEventListener("scroll",(function(){window.scrollY>window.innerHeight/2?t.classList.contains("caes-hub-to-top-visible")||t.classList.add("caes-hub-to-top-visible"):t.classList.contains("caes-hub-to-top-visible")&&(t.classList.add("caes-hub-to-top-hide"),setTimeout((()=>{t.classList.remove("caes-hub-to-top-visible","caes-hub-to-top-hide")}),250))})),t.addEventListener("click",(function(e){e.preventDefault(),window.scrollTo({top:0,behavior:"smooth"})})),document.querySelectorAll(".post, .entry-content").forEach((e=>{e.querySelectorAll("p").forEach((e=>{""===e.innerHTML.replace(/<br\s*\/?>/gi,"").replace(/&#13;/g,"").replace(/&nbsp;/gi,"").trim()&&e.remove()}))}));const s=document.querySelector(".classic-content-wrapper").querySelectorAll("h2");s.forEach((e=>{e.classList.add("is-style-caes-hub-full-underline")})),s.querySelectorAll("strong").forEach((e=>{for(;e.firstChild;)e.parentNode.insertBefore(e.firstChild,e);e.remove()})),document.querySelectorAll("figure > table, .wp-block-table").forEach((e=>{const t=e.closest("figure")||e;if(t.parentElement.classList.contains("responsitable-wrapper"))return;const s=document.createElement("div");s.classList.add("responsitable-wrapper"),t.parentNode.insertBefore(s,t),s.appendChild(t)})),e()})),window.addEventListener("resize",e)})();document.addEventListener('DOMContentLoaded', function () { const saveButtons = document.querySelectorAll('.btn-save'); saveButtons.forEach(button => { button.addEventListener('click', function () { const postId = this.getAttribute('data-id'); const postType = this.getAttribute('data-type'); let saved = JSON.parse(localStorage.getItem('savedPosts')) || {}; if (!saved[postType]) saved[postType] = []; if (saved[postType].includes(postId)) { saved[postType] = saved[postType].filter(id => id !== postId); this.classList.remove('saved'); } else { saved[postType].push(postId); this.classList.add('saved'); } localStorage.setItem('savedPosts', JSON.stringify(saved)); }); }); });
